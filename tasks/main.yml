---
- name: Install kong dependencies
  apt:
    pkg: "{{ item }}"
    state: installed
  with_items: "{{ kong_apt_dependencies }}"

- name: Download kong deb package
  get_url:
    url: "{{ kong_source_deb }}"
    dest: "{{ kong_dest_deb }}"
    mode: 0600

- name: Install kong deb package
  apt:
    deb: "{{ kong_dest_deb }}"

- name: Ensure kong group is present
  user:
    name: "{{ kong_group }}"
    state: present

- name: Ensure kong user is present
  user:
    name: "{{ kong_user }}"
    group: "{{ kong_group }}"
    state: present

- name: Setup kong configuration
  template:
    src: etc/kong/kong.conf.j2
    dest: "{{ kong_conf_dest }}"
  notify: "restart kong {{ kong_daemon_manager }}"

- name: Ensure log service directory exists
  file:
    path: "{{ kong_log_dir }}"
    state: directory
    owner: "{{ kong_user }}"
    group: "{{ kong_group }}"
    mode: 0755

- name: Check if ssl cert exists
  stat:
    path: "{{ kong_conf_general_prefix }}/ssl/admin-kong-default.crt"
  register: kong_ssl_cert_exists

- name: Ensure ssl cert exists
  when: kong_ssl_cert_exists.stat.exists == False
  block:
  - name: Remove incomplete ssl dir
    file:
      path: "{{ kong_conf_general_prefix }}/ssl"
      state: absent
  - name: Regenerate ssl cert
    command: "/usr/local/bin/kong prepare"

- name: Detecting if kong running
  command: "ps auxw"
  changed_when: ps_output.stdout.find('kong -c nginx.conf') == -1
  register: ps_output
  notify: "start kong {{ kong_daemon_manager }}"
  when: kong_service_start | bool
